#!/bin/bash
set -eu -o pipefail
safe_source () { [[ ! -z ${1:-} ]] && source $1; _dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"; _sdir=$(dirname "$(readlink -f "$0")"); }; safe_source
# end of bash boilerplate

# TODO: Add Algorithm
safe_source $_dir/lib/all.sh

s=$1
d=$2
dry_run=true

[[ $(whoami) = "root" ]] || { sudo $0 $*; exit 0; }

echo
echo "==============================================="
echo "from $s to $d"
echo "==============================================="
echo
# source and destination should be on different disks
require_different_disks $s $d

src_mnt=$(mount_point_of $s)
dst_mnt=$(mount_point_of $d)

for _snap_root in $(get_snapshot_roots $s); do
    snap_root=${_snap_root#$src_mnt/}
    echo_blue "Syncing $snap_root -> $dst_mnt/..."

    # echo "--- the subvolumes to be synced: ---"
    snapshots=$(list_subvol_below $src_mnt/$snap_root)

    # create target directory structure
    mkdir -p "$dst_mnt/$snap_root"

    echo "--- already sent: ---"
    find_sent_subs "$src_mnt/$snap_root" "$dst_mnt/$snap_root"

    echo "--- incomplete transfers ---"
    for incomplete in `list_subvol_below $dst_mnt/$snap_root true`; do
        if is_subvolume_incomplete $incomplete; then
            echo_yellow "Found incomplete snapshot: $incomplete"
            if [[ $dry_run = false ]]; then
                btrfs sub del $incomplete
            else
                echo "(This is dry run, won't delete anything actually)"
            fi
        fi
    done

    echo "--- missing: ---"
    for missing in `find_missing_subs "$src_mnt/$snap_root" "$dst_mnt/$snap_root"`; do
        parent=$(find_prev_snap $missing $snapshots)
        if [[ -z $parent ]]; then
            echo_yellow "No parent found for $missing, sending whole snapshot"
            _parent_arg=
        else
            echo_blue "Sending $(basename $missing) (based on $(basename $parent)) "
            _parent_arg="-p $parent"
        fi

        if [[ $dry_run = true ]]; then
            echo "(This is dry run, won't send anything actually.)"
        else
            btrfs send -q $_parent_arg $missing | pv | btrfs receive $dst_mnt/$snap_root/ > /dev/null
            echo_green "...$missing succesfully sent."
        fi
    done
    echo "--- end of $snap_root ---"
done

echo_green "done."
